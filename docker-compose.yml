services:
  app:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - ./sqlite.db:/app/sqlite.db
    healthcheck:
      test: ["node", "-e", "fetch('http://localhost:3000').then(() => process.exit(0)).catch(() => process.exit(1))"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  vector:
    image: timberio/vector:latest-debian
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - /var/log:/var/log:ro
      - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
      - ./vector:/etc/vector
      - vector-data:/var/lib/vector
      - ./vector/detect-and-start.sh:/scripts/detect-and-start.sh:ro
    environment:
      - VECTOR_LOG=info
    entrypoint: ["/bin/sh", "/scripts/detect-and-start.sh"]

  frontend:
    build: ./frontend
    ports:
      - "8080:3000"
    depends_on:
      - app
    environment:
      - API_BASE_URL=http://localhost:3000
      - API_BACKEND_URL=http://app:3000

volumes:
  vector-data: